#include <IRremote.h>
int receiverpin=10;
int buzzer = 13;
int green =  3;
int red1  =  5;
int red2  =  6;
int red3  =  9;
IRrecv irrecv(receiverpin);
decode_results results;
char guess[4];
  int counter = 0;
  char correct[4]={7,1,3,9};
  int brightness = 200;
  int number;
/*
----------------------------------------------
THESE ARE THE HEX VALUES FOR THE KEYS ON THE REMOTE
int power = 0xA90;
int num1 = 0x010;
int num2 = 0x810;
int num3 = 0x410;
int num4 = 0xC10;
int num5 = 0x210;
int num6 = 0xA10;
int num7 = 0x610;
int num8 = 0xE10;
int num9 = 0x110;
int num0 = 0x910;
int enter= 0xD10;
------------------------------------------------
*/
void setup(){
  Serial.begin(9600);
  irrecv.enableIRIn();
  pinMode (buzzer,OUTPUT);
  pinMode (green,OUTPUT);
  pinMode (red1,OUTPUT);
  pinMode (red2,OUTPUT);
  pinMode (red3,OUTPUT);
  digitalWrite(green,0);
  digitalWrite(red1,0);
  digitalWrite(red2,0);
  digitalWrite(red3,0);
  analogWrite(buzzer,0);
}
int err=0;
int tries=0;
void loop(){
  delay(250);
  if(irrecv.decode(&results))
  {  //if i receive signal    
    switch (results.value) 
    {
      case 0x010:
        number = 1;
        guess[counter]=number;
        Serial.println(number);
        delay(100);
        counter++;
        break;
      case 0x810:
        number = 2;
        guess[counter]=number;
        Serial.println(number);
        delay(100);
        counter++;
        break;
      case 0x410:
        number = 3;
        guess[counter]=number;
        Serial.println(number);
        delay(100);
        counter++;
        break;
     case 0xC10:
       number = 4;
       guess[counter]=number;
       Serial.println(number);
       delay(100);
       counter++;
       break;
     case 0x210:
       number = 5;
       guess[counter]=number;
       Serial.println(number);
       delay(100);
       counter++;
       break;
     case 0xA10:
        number = 6;
        guess[counter]=number;
        Serial.println(number);
        delay(100);
        counter++;
        break;
     case 0x610:
        number = 7;
        guess[counter]=number;
        Serial.println(number);
        delay(100);
        counter++;
        break;
     case 0xE10:
        number = 8;
        guess[counter]=number;
        Serial.println(number);
        delay(100);
        counter++;
        break;
     case 0x110:
        number = 9;
        guess[counter]=number;
        Serial.println(number);
        delay(100);
        counter++;
        break;
    case 0x910:
        number = 0;
        guess[counter]=number;
        Serial.println(number);
        delay(100);
        counter++;
        break;
     case 0xD10:      //add case for enter
        if (correct[0] == guess[0] && correct[1] == guess[1] && correct[2] == guess[2] && correct[3] == guess[3]){
           digitalWrite(green,HIGH);
           digitalWrite(red1,LOW);
           digitalWrite(red2,LOW);
           digitalWrite(red3,LOW);
           digitalWrite(buzzer,LOW);
           err=0;
          }
    
         else  {
           digitalWrite(buzzer,HIGH);
           delay(1000);
           digitalWrite(buzzer,LOW);
           counter=0;
           err++;
         }
        if (err==1){
          digitalWrite(green,LOW);
          digitalWrite(red1,HIGH);
          digitalWrite(red2,LOW);
          digitalWrite(red3,LOW);
          digitalWrite(buzzer,LOW);
      
         }
       else if (err==2){
         digitalWrite(green,LOW);
         digitalWrite(red1,HIGH);
         digitalWrite(red2,HIGH);
         digitalWrite(red3,LOW);
         digitalWrite(buzzer,LOW);
      
       } 
      else if (err==3){
         digitalWrite(green,LOW);
         digitalWrite(red1,HIGH);
         digitalWrite(red2,HIGH);
         digitalWrite(red3,HIGH);
         analogWrite(buzzer,128); 
      } 
    }
  /* else{
  guess[counter]=0xA90;
   counter++; 
  }*/

  for(int o=0;o<2;o++)
  {
     irrecv.resume(); 
  }
  }
}
